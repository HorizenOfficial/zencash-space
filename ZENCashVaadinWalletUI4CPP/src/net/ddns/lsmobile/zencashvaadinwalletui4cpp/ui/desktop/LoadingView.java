package net.ddns.lsmobile.zencashvaadinwalletui4cpp.ui.desktop;

import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.xdev.res.ApplicationResource;
import com.xdev.ui.XdevButton;
import com.xdev.ui.XdevGridLayout;
import com.xdev.ui.XdevImage;
import com.xdev.ui.XdevLabel;
import com.xdev.ui.XdevView;
import com.xdev.ui.navigation.Navigation;

import net.ddns.lsmobile.zencashvaadinwalletui4cpp.business.IWallet;

public class LoadingView extends XdevView  implements IWallet {

	/**
	 * 
	 */
	public LoadingView() {
		super();
		this.initUI();
	}

	/**
	 * Event handler delegate method for the {@link XdevButton} {@link #buttonOk}.
	 *
	 * @see Button.ClickListener#buttonClick(Button.ClickEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void buttonOk_buttonClick(final Button.ClickEvent event) {
		Navigation.to("home").navigate();
	}

	/*
	 * WARNING: Do NOT edit!<br>The content of this method is always regenerated by
	 * the UI designer.
	 */
	// <generated-code name="initUI">
	private void initUI() {
		this.gridLayout = new XdevGridLayout();
		this.imageLoading = new XdevImage();
		this.labelLoading = new XdevLabel();
		this.buttonOk = new XdevButton();
	
		this.imageLoading
				.setSource(new ApplicationResource(this.getClass(), "WebContent/WEB-INF/resources/images/loading.gif"));
		this.labelLoading.setValue("Your wallet is currently being downloaded and decrypted. Please, be patient...");
		this.buttonOk.setCaption("OK");
	
		this.gridLayout.setColumns(1);
		this.gridLayout.setRows(4);
		this.imageLoading.setWidth(100, Unit.PIXELS);
		this.imageLoading.setHeight(100, Unit.PIXELS);
		this.gridLayout.addComponent(this.imageLoading, 0, 0);
		this.gridLayout.setComponentAlignment(this.imageLoading, Alignment.BOTTOM_CENTER);
		this.labelLoading.setSizeUndefined();
		this.gridLayout.addComponent(this.labelLoading, 0, 1);
		this.gridLayout.setComponentAlignment(this.labelLoading, Alignment.TOP_CENTER);
		this.buttonOk.setSizeUndefined();
		this.gridLayout.addComponent(this.buttonOk, 0, 3);
		this.gridLayout.setComponentAlignment(this.buttonOk, Alignment.TOP_CENTER);
		this.gridLayout.setColumnExpandRatio(0, 10.0F);
		this.gridLayout.setRowExpandRatio(0, 10.0F);
		this.gridLayout.setRowExpandRatio(3, 10.0F);
		this.gridLayout.setSizeFull();
		this.setContent(this.gridLayout);
		this.setSizeFull();
	
		this.buttonOk.addClickListener(event -> this.buttonOk_buttonClick(event));
	} // </generated-code>

	// <generated-code name="variables">
	private XdevLabel labelLoading;
	private XdevButton buttonOk;
	private XdevImage imageLoading;
	private XdevGridLayout gridLayout;
	// </generated-code>

}
