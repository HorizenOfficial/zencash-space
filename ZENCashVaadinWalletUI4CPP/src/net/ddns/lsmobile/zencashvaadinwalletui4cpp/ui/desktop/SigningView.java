
package net.ddns.lsmobile.zencashvaadinwalletui4cpp.ui.desktop;

import com.vaadin.event.ShortcutAction;
import com.vaadin.navigator.ViewChangeListener;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Notification;
import com.vaadin.ui.Notification.Type;
import com.xdev.security.authentication.jpa.HashStrategy;
import com.xdev.ui.XdevButton;
import com.xdev.ui.XdevGridLayout;
import com.xdev.ui.XdevPanel;
import com.xdev.ui.XdevPasswordField;
import com.xdev.ui.XdevTextField;
import com.xdev.ui.XdevView;
import com.xdev.ui.navigation.Navigation;

import net.ddns.lsmobile.zencashvaadinwalletui4cpp.business.IConfig;
import net.ddns.lsmobile.zencashvaadinwalletui4cpp.entities.User;

public class SigningView extends XdevView implements com.xdev.security.authentication.ui.LoginView, IConfig {

	/**
	 * 
	 */
	public SigningView() {
		super();
		this.initUI();
	}

	@Override
	public void enter(final ViewChangeListener.ViewChangeEvent event) {
		super.enter(event);
	
	}

	@Override
	public String getPassword() {
		return this.txtPassword.getValue();
	}

	@Override
	public String getUsername() {
		return this.txtUsername.getValue();
	}

	/**
	 * Event handler delegate method for the {@link XdevButton}
	 * {@link #cmdSign}.
	 *
	 * @see Button.ClickListener#buttonClick(Button.ClickEvent)
	 * @eventHandlerDelegate
	 */
	private void cmdSign_buttonClick(final Button.ClickEvent event) {
        if (userDAO.findUsers(this.txtUsername.getValue()).size() > 0) {
        	Notification.show("The username exists", Type.ERROR_MESSAGE);
        	return;
        }
        if (!this.txtPassword.getValue().equals(this.txtRepeatPassword.getValue())) {
        	Notification.show("The passwords are not equal", Type.ERROR_MESSAGE);
        	return;
        }
        final byte[] encryptedPassword = new HashStrategy.SHA2().hashPassword(this.txtPassword.getValue().getBytes());
        final User user = new User ();
        user.setUsername(this.txtUsername.getValue());
        user.setPassword(encryptedPassword);
        userDAO.save(user);
        userDAO.commit();
        
		Notification.show("You are signed");
//		try {
//			Thread.sleep(2000);
//		} catch (final Exception e) {
//			log.error("Unexpected error: ", e);
//		}
		Navigation.to("").navigate();
//		this.cmdSign.setEnabled(false);
//		final UI ui = getUI();
//		new Thread(new RunnableAccessWrapper(() -> {
//			try {
//				ui.access(() -> {
//					try {
////						ui.push();
//					} catch (final Exception e) {
//						log.error("Unexpected error: ", e);
//					}
//				});
//			} catch (final Exception ex) {
//				log.error("Unexpected error: ", ex);
//			}
//		})).start();
	}

	/**
	 * Event handler delegate method for the {@link XdevButton} {@link #linkLogin}.
	 *
	 * @see Button.ClickListener#buttonClick(Button.ClickEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void linkLogin_buttonClick(final Button.ClickEvent event) {
		Navigation.to("").navigate();
	}

	/*
	 * WARNING: Do NOT edit!<br>The content of this method is always regenerated by
	 * the UI designer.
	 */
	// <generated-code name="initUI">
	private void initUI() {
		this.gridLayout = new XdevGridLayout();
		this.panel = new XdevPanel();
		this.gridLayout2 = new XdevGridLayout();
		this.txtUsername = new XdevTextField();
		this.txtPassword = new XdevPasswordField();
		this.txtRepeatPassword = new XdevPasswordField();
		this.linkLogin = new XdevButton();
		this.cmdSign = new XdevButton();
	
		this.panel.setCaption("Sign");
		this.panel.setTabIndex(0);
		this.txtUsername.setCaption("Username");
		this.txtUsername.setRequired(true);
		this.txtPassword.setCaption("Password");
		this.txtPassword.setRequired(true);
		this.txtRepeatPassword.setCaption("Repeat password");
		this.txtRepeatPassword.setRequired(true);
		this.linkLogin.setCaption("Login");
		this.linkLogin.setStyleName("link");
		this.cmdSign.setCaption("Sign");
		this.cmdSign.setStyleName("friendly");
		this.cmdSign.setClickShortcut(ShortcutAction.KeyCode.ENTER);
	
		this.gridLayout2.setColumns(2);
		this.gridLayout2.setRows(5);
		this.txtUsername.setWidth(100, Unit.PERCENTAGE);
		this.txtUsername.setHeight(-1, Unit.PIXELS);
		this.gridLayout2.addComponent(this.txtUsername, 0, 0, 1, 0);
		this.txtPassword.setWidth(100, Unit.PERCENTAGE);
		this.txtPassword.setHeight(-1, Unit.PIXELS);
		this.gridLayout2.addComponent(this.txtPassword, 0, 1, 1, 1);
		this.txtRepeatPassword.setWidth(100, Unit.PERCENTAGE);
		this.txtRepeatPassword.setHeight(-1, Unit.PIXELS);
		this.gridLayout2.addComponent(this.txtRepeatPassword, 0, 2, 1, 2);
		this.linkLogin.setSizeUndefined();
		this.gridLayout2.addComponent(this.linkLogin, 0, 3);
		this.cmdSign.setSizeUndefined();
		this.gridLayout2.addComponent(this.cmdSign, 1, 3);
		this.gridLayout2.setComponentAlignment(this.cmdSign, Alignment.TOP_RIGHT);
		this.gridLayout2.setColumnExpandRatio(0, 10.0F);
		this.gridLayout2.setColumnExpandRatio(1, 10.0F);
		final CustomComponent gridLayout2_vSpacer = new CustomComponent();
		gridLayout2_vSpacer.setSizeFull();
		this.gridLayout2.addComponent(gridLayout2_vSpacer, 0, 4, 1, 4);
		this.gridLayout2.setRowExpandRatio(4, 1.0F);
		this.gridLayout2.setSizeFull();
		this.panel.setContent(this.gridLayout2);
		this.gridLayout.setColumns(1);
		this.gridLayout.setRows(1);
		this.panel.setSizeUndefined();
		this.gridLayout.addComponent(this.panel, 0, 0);
		this.gridLayout.setComponentAlignment(this.panel, Alignment.MIDDLE_CENTER);
		this.gridLayout.setColumnExpandRatio(0, 10.0F);
		this.gridLayout.setRowExpandRatio(0, 10.0F);
		this.gridLayout.setSizeFull();
		this.setContent(this.gridLayout);
		this.setSizeFull();
	
		this.linkLogin.addClickListener(event -> this.linkLogin_buttonClick(event));
		this.cmdSign.addClickListener(event -> this.cmdSign_buttonClick(event));
	} // </generated-code>

	// <generated-code name="variables">
	private XdevButton linkLogin, cmdSign;
	private XdevPasswordField txtPassword, txtRepeatPassword;
	private XdevPanel panel;
	private XdevGridLayout gridLayout, gridLayout2;
	private XdevTextField txtUsername;
	// </generated-code>

}
